{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../node_modules/remix/dist/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/context.ts", "../app/createEmotionCache.ts", "../app/i18next.server.ts", "../app/i18n.ts", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/root.tsx", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/api/data/accounts/emerald/index.ts", "../app/lib/flow/utils/index.ts", "../app/lib/flow/constants.ts", "../app/lib/flow/scripts.ts", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/api/auth/withdraw.ts", "../app/lib/flow/transactions.ts", "../app/lib/flow/utils/authz.ts", "../app/lib/flow/utils/crypto.ts", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/route-with-error.tsx", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/api/$id/test.ts", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/good-route.tsx", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/index.tsx", "/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/test.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "/**\n * @remix-run/node v1.6.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar node = require('@remix-run/node');\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.6.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar serverRuntime = require('@remix-run/server-runtime');\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.6.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar react = require('@remix-run/react');\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\n\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/entry.server.tsx\";\nimport * as route0 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/root.tsx\";\nimport * as route1 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/api/data/accounts/emerald/index.ts\";\nimport * as route2 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/api/auth/withdraw.ts\";\nimport * as route3 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/route-with-error.tsx\";\nimport * as route4 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/api/$id/test.ts\";\nimport * as route5 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/good-route.tsx\";\nimport * as route6 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/index.tsx\";\nimport * as route7 from \"/Users/caos/workspace/develop/flow/thing/renas-vercel/app/routes/test.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api/data/accounts/emerald/index\": {\n      id: \"routes/api/data/accounts/emerald/index\",\n      parentId: \"root\",\n      path: \"api/data/accounts/emerald\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/api/auth/withdraw\": {\n      id: \"routes/api/auth/withdraw\",\n      parentId: \"root\",\n      path: \"api/auth/withdraw\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/route-with-error\": {\n      id: \"routes/route-with-error\",\n      parentId: \"root\",\n      path: \"route-with-error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/api/$id/test\": {\n      id: \"routes/api/$id/test\",\n      parentId: \"root\",\n      path: \"api/:id/test\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/good-route\": {\n      id: \"routes/good-route\",\n      parentId: \"root\",\n      path: \"good-route\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/test\": {\n      id: \"routes/test\",\n      parentId: \"root\",\n      path: \"test\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };", "import { renderToString } from 'react-dom/server';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport type { EntryContext } from 'remix';\nimport { RemixServer } from 'remix';\nimport 'dotenv/config';\nimport { createInstance } from \"i18next\";\nimport { resolve } from \"node:path\";\nimport Backend from \"i18next-fs-backend\";\nimport { I18nextProvider, initReactI18next } from \"react-i18next\";\n\nimport { ServerStyleContext } from './context';\nimport { createEmotionCache } from './createEmotionCache';\nimport i18next from \"./i18next.server\";\nimport i18n from './i18n'; // your i18n configuration file\n\nexport default async function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n  // First, we create a new instance of i18next so every request will have a\n  // completely unique instance and not share any state\n  let instance = createInstance();\n\n  // Then we could detect locale from the request\n  let lng = await i18next.getLocale(request);\n  // And here we detect what namespaces the routes about to render want to use\n  let ns = i18next.getRouteNamespaces(remixContext);\n\n  await instance\n    .use(initReactI18next) // Tell our instance to use react-i18next\n    .use(Backend) // Setup our backend\n    .init({\n      ...i18n, // spread the configuration\n      lng, // The locale we detected above\n      ns, // The namespaces the routes about to render wants to use\n      backend: {\n        loadPath: resolve(\"./public/locales/{{lng}}/{{ns}}.json\"),\n      },\n    });\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import * as React from \"react\"\n\nexport interface ServerStyleContextData {\n    key: string\n    ids: Array<string>\n    css: string\n}\n\nexport const ServerStyleContext = React.createContext<ServerStyleContextData[] | null>(null)\n\nexport interface ClientStyleContextData {\n    reset: () => void\n}\n\nexport const ClientStyleContext = React.createContext<ClientStyleContextData | null>(null)", "import createCache from \"@emotion/cache\"\n\nexport function createEmotionCache() {\n    return createCache({ key: \"css\" })\n}", "import Backend from 'i18next-fs-backend';\nimport { resolve } from 'node:path';\nimport { RemixI18Next } from 'remix-i18next';\nimport i18n from '~/i18n'; // your i18n configuration file\n\nlet i18next = new RemixI18Next({\n  detection: {\n    supportedLanguages: i18n.supportedLngs,\n    fallbackLanguage: i18n.fallbackLng,\n  },\n  // This is the configuration for i18next used\n  // when translating messages server-side only\n  i18next: {\n    ...i18n,\n    backend: {\n      loadPath: resolve('./public/locales/{{lng}}/{{ns}}.json'),\n    },\n  },\n  // The backend you want to use to load the translations\n  // Tip: You could pass `resources` to the `i18next` configuration and avoid\n  // a backend here\n  backend: Backend,\n});\n\nexport default i18next;", "export default {\n    // This is the list of languages your application supports\n    supportedLngs: ['en', 'zh'],\n    // This is the language you want to use in case\n    // if the user language is not in the supportedLngs\n    fallbackLng: 'zh',\n    // The default namespace of i18next is \"translation\", but you can customize it here\n    defaultNS: 'common',\n    // Disabling suspense is recommended\n    react: {useSuspense: false},\n};", "import React from 'react';\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData\n} from '@remix-run/react';\nimport type { MetaFunction } from '@remix-run/node';\nimport { VStack, Heading, ChakraProvider, Text } from '@chakra-ui/react';\nimport { withEmotionCache } from '@emotion/react';\nimport { useChangeLanguage } from \"remix-i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport { ServerStyleContext, ClientStyleContext } from './context';\nimport i18next from \"~/i18next.server\";\ntype LoaderData = { locale: string };\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let locale = await i18next.getLocale(request);\n  return json<LoaderData>({ locale });\n};\n\nexport const meta: MetaFunction = () => {\n  return { title: 'Melody payment' };\n};\n\nexport let handle = {\n  // In the handle export, we can add a i18n key with namespaces our route\n  // will need to load. This key can be a single string or an array of strings.\n  // TIP: In most cases, you should set this to your defaultNS from your i18n config\n  // or if you did not set one, set it to the i18next default namespace \"translation\"\n  i18n: \"common\",\n};\n\n\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>There was an error</Heading>\n        <Text>{error.message}</Text>\n        <hr />\n        <Text>\n          Hey, developer, you should replace this with what you want your users\n          to see.\n        </Text>\n      </VStack>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </Text>\n      );\n      break;\n    case 404:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that does not exist.\n        </Text>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>\n          {caught.status}: {caught.statusText}\n        </Heading>\n        {message}\n      </VStack>\n    </Document>\n  );\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverSyleData = React.useContext(ServerStyleContext);\n    const clientStyleData = React.useContext(ClientStyleContext);\n\n    // Only executed on client\n    React.useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n\n    // Get the locale from the loader\n    let { locale } = useLoaderData<LoaderData>();\n\n    let { i18n } = useTranslation();\n\n    // This hook will change the i18n instance language to the current locale\n    // detected by the loader, this way, when we do something to change the\n    // language, this locale will change and i18next will load the correct\n    // translation files\n    useChangeLanguage(locale);\n\n    return (\n      <html lang={locale} dir={i18n.dir()}>\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstaticom\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <Meta />\n          <Links />\n          {serverSyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(' ')}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n", "import { json } from '@remix-run/node' // or \"@remix-run/cloudflare\"\nimport type { LoaderFunction } from '@remix-run/node' // or \"@remix-run/cloudflare\"\nimport fcl from '@onflow/fcl'\nimport t from '@onflow/types'\n\nimport { fclinit, isDiscordId, isFlowAddr } from '~/lib/flow/utils'\nimport { query } from '~/lib/flow/scripts'\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  fclinit()\n\n  const url = new URL(request.url)\n  const discordId = url.searchParams.get('discordId') ?? ''\n  const address = url.searchParams.get('address') ?? ''\n\n  let res = null\n  console.log(discordId)\n  console.log(address)\n\n  if (isDiscordId(discordId)) {\n    res = await query('get_address_by_dicord_id', [fcl.arg(discordId, t.String)])\n    console.log(res)\n  } else if (isFlowAddr(address)) {\n    res = await query('get_discord_id_by_address', [fcl.arg(address, t.Address)])\n    console.log(res)\n  }\n  return json({ success: true, res }, 200)\n}\n", "import { createStandaloneToast } from '@chakra-ui/react'\nimport moment from 'moment'\nimport Big from 'big.js'\nimport axios from 'axios'\nimport * as fcl from '@onflow/fcl'\n// import { send as httpSend } from '@onflow/transport-http'\nimport { send as grpcSend } from '@onflow/transport-grpc'\n\nimport {\n  nodeUrl,\n  flowTokenAddr,\n  flowFungibleAddr,\n  fusdTokenAddr,\n  flowNonFungibleAddr,\n  discoveryUrl,\n  network,\n  emeraldIdAddress,\n  discoveryEndpointUrl,\n} from '../constants'\n\nexport const fclinit = () => {\n  fcl\n    .config()\n    .put('discovery.wallet', discoveryUrl)\n    // .put('discovery.authn.endpoint', discoveryEndpointUrl)\n    .put('sdk.transport', grpcSend)\n    .put('env', network)\n    .put('flow.network', network)\n    .put('accessNode.api', nodeUrl)\n    .put('0xNonFungibleToken', flowNonFungibleAddr)\n    .put('0xFungibleToken', flowFungibleAddr)\n    .put('0xFlowToken', flowTokenAddr)\n    .put('0xFUSD', fusdTokenAddr)\n    .put('0xEmeraldIdentity', emeraldIdAddress)\n    .put('0xEmeraldID', emeraldIdAddress)\n    // .put('grpc.metadata', { api_key: alchemyKey })\n    .put('app.detail.title', 'Flowns')\n    .put(\n      'app.detail.icon',\n      'https://trello.com/1/cards/624713879fd8c23f0395c63d/attachments/6247139af2071076c7d74c93/previews/6247139bf2071076c7d74cb3/download/logo192.png',\n    )\n}\n\nexport const getNowTimestamp = () => {\n  return new Date().getTime()\n}\n\nexport const timeformater = (timestamp: number, formater: string) => {\n  const time = Number(timestamp)\n  if (time === 0) return ''\n  return moment(time * 1000).format(formater || 'YYYY-MM-DD hh:mm:ss')\n}\n\nexport const formatNumber = (num: number) => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const formatBalance = (amount = '0', decimal = 18) => {\n  const num = Big(amount).div(10 ** decimal)\n  return num.toFixed(2)\n}\n\nexport const getQuery = async (url: string, params = {}, headers = {}) => {\n  try {\n    const data = await axios.get(url, { params, headers })\n    return data.data\n  } catch (error) {\n    console.log(error)\n    return {}\n  }\n}\n\nexport const putReq = async (url: string, params = {}, headers = {}) => {\n  try {\n    const data = await axios.put(url, params, { headers })\n    return data.data\n  } catch (error) {\n    console.log(error)\n    return {}\n  }\n}\n\nexport const postReq = async (url: string, params = {}, headers = {}) => {\n  try {\n    const data = await axios.post(url, params, { headers })\n    return data.data\n  } catch (error) {\n    console.log(error)\n    return {}\n  }\n}\n\n// const toastStandalone = createStandaloneToast()\n// export const toast = ({\n//   title = '',\n//   desc = '',\n//   status = 'success',\n//   duration = 3000,\n//   isClosable = true,\n//   position = 'top',\n// }) => {\n//   toastStandalone({\n//     position: position,\n//     title,\n//     description: desc,\n//     status,\n//     duration,\n//     isClosable,\n//   })\n// }\n\nexport function getFlowScanLink(chainType: string, data: string, type: string) {\n  const host = chainType === 'mainnet' ? `https://flowscan.io` : ``\n\n  switch (type) {\n    case 'transaction': {\n      return `${host}/tx/${data}`\n    }\n    case 'token': {\n      return `${host}/token/${data}`\n    }\n    case 'block': {\n      return `${host}/block/${data}`\n    }\n    case 'address':\n    default: {\n      return `${host}/address/${data}`\n    }\n  }\n}\n\n// export const preloadFonts = (id: number) => {\n//   return new Promise((resolve) => {\n//     WebFont.load({\n//       typekit: {\n//         id: id,\n//       },\n//       active: resolve,\n//     })\n//   })\n// }\n\nexport const randomNumber = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min)\n\n// todo add server sign and client sign\nexport const sendTrx = async (CODE: string, args = [], opt: any = {}) => {\n  const authz = opt.authz || fcl.authz\n\n  const txId = await fcl\n    .send([\n      fcl.transaction(CODE),\n      fcl.args(args),\n      fcl.proposer(authz),\n      fcl.payer(authz),\n      fcl.authorizations([authz]),\n      fcl.limit(opt.limit || 9999),\n    ])\n    .then(fcl.decode)\n\n  return txId\n}\n\n// export const throttle = (fn: any, delay: number) => {\n//   let previous = 0\n//   // \u4F7F\u7528\u95ED\u5305\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u5E76\u4E14\u7528\u5230\u95ED\u5305\u51FD\u6570\u5916\u9762\u7684\u53D8\u91CFprevious\n//   return function () {\n//     var _this: any = this\n//     var args = arguments\n//     var now: Date = new Date()\n//     if (now - previous > delay) {\n//       fn.apply(_this, args)\n//       previous = now\n//     }\n//   }\n// }\n\n// export const debounce = (func, wait) => {\n//   let timer\n//   return function () {\n//     var context = this // \u6CE8\u610F this \u6307\u5411\n//     var args = arguments // arguments\u4E2D\u5B58\u7740event\n\n//     if (timer) clearTimeout(timer)\n\n//     timer = setTimeout(function () {\n//       func.apply(context, args)\n//     }, wait)\n//   }\n// }\n\nexport const execScript = async (script: string, args = []) => {\n  return await fcl.send([fcl.script`${script}`, fcl.args(args)]).then(fcl.decode)\n}\n\nexport const camelize = (str: string) => {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toUpperCase() : word.toUpperCase()\n    })\n    .replace(/\\s+/g, '')\n}\n\nexport const ellipseAddress = (address = '', width = 3) => {\n  return `${address.slice(0, width)}...${address.slice(-width)}`\n}\n\nexport const ellipseStr = (str = '', start = 8, end = 8) => {\n  return `${str.slice(0, start)}...${str.slice(-end)}`\n}\n\nexport const isFlowAddr = (str = '') => {\n  return /^0x[0-9a-f]{16}$/.test(str)\n}\n\nexport const isDiscordId = (str = '') => {\n  return /^\\d{18}$/.test(str)\n}\n\nexport const firstUpperCase = (value: string) => {\n  return value.replace(/\\b(\\w)(\\w*)/g, function ($0, $1, $2) {\n    return $1.toUpperCase() + $2.toLowerCase()\n  })\n}\n\nexport const validateKey = (key: string) => {\n  const reg = /^[_a-zA-Z][_a-zA-Z0-9]*$/\n  return reg.test(key)\n}\n\nexport const validateAddress = (key: number, address = '') => {\n  if (key == undefined) return false\n  address = address.toLowerCase()\n  const flowReg = /^0x[0-9a-f]{16}$/\n  const ethReg = /^0x[0-9a-f]{40}$/\n  let reg = null\n  key = Number(key)\n  switch (key) {\n    case 0:\n      reg = flowReg\n      break\n    case 1:\n      reg = ethReg\n      break\n    default:\n      reg = null\n  }\n  return reg?.test(address)\n}\n", "export const nodeUrl = process.env.FLOW_ACCESS_NODE\n\nexport const discoveryUrl = process.env.DISCOVERY_URL\n\nexport const discoveryEndpointUrl = process.env.DISCOVERY_ENDPOINT_URL\n\nexport const flowTokenAddr = process.env.FLOW_TOKEN_ADDRESS\n\nexport const fusdTokenAddr = process.env.FUSD_TOKEN_ADDRESS\n\nexport const flowFungibleAddr = process.env.FLOW_FUNGIBLE_ADDRESS\n\nexport const flowNonFungibleAddr = process.env.FLOW_NONFUNGIBLE_ADDRESS\n\nexport const emeraldIdAddress = process.env.EMERALD_ID_ADDRESS\n\nexport const gaCode = process.env.GA\n\nexport const network = process.env.NETWORK\n\nexport const isTestnet = network == 'testnet'\n\nexport const graffleId = process.env.GRAFFLE_ID\n\nexport const privateKey = process.env.PRIVATE_KEY\nexport const publicKey = process.env.PUBLIC_KEY\n\nexport const getGraffleUrl = () => {\n  let url = `https://prod-${\n    isTestnet ? 'test-net' : 'main-net'\n  }-dashboard-api.azurewebsites.net/api/company/${graffleId}/search`\n  return url\n}\n\nexport const getExplorerTxUrl = (type = 'flowScan') => {\n  const flowScanUrl = `https://${isTestnet ? 'testnet.' : ''}flowscan.org/transaction/`\n  const viewSourceUrl = `https://flow-view-source.com/${network}/tx/`\n  return type == 'flowScan' ? flowScanUrl : viewSourceUrl\n}\n\nexport const getSupportTokenConfig = (): any => {\n  let tokenConfigs = {}\n  if (isTestnet) {\n    tokenConfigs = {\n      FLOW: {\n        type: 'A.7e60df042a9c0868.FlowToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['FLOW'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['FLOW'],\n        storagePath: getSupportTokenVaultPath('private')['FLOW'],\n      },\n      FUSD: {\n        type: 'A.e223d8a629e49c68.FUSD.Vault',\n        publicBalPath: getSupportTokenVaultPath()['FUSD'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['FUSD'],\n        storagePath: getSupportTokenVaultPath('private')['FUSD'],\n      },\n      BLT: {\n        type: 'A.6e0797ac987005f5.BloctoToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['BLT'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['BLT'],\n        storagePath: getSupportTokenVaultPath('private')['BLT'],\n      },\n      USDC: {\n        type: 'A.a983fecbed621163.FiatToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['USDC'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['USDC'],\n        storagePath: getSupportTokenVaultPath('private')['USDC'],\n      },\n      MY: {\n        type: 'A.40212f3e288efd03.MyToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['MY'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['MY'],\n        storagePath: getSupportTokenVaultPath('private')['MY'],\n      },\n    }\n  } else {\n    tokenConfigs = {\n      FLOW: {\n        type: 'A.1654653399040a61.FlowToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['FLOW'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['FLOW'],\n        storagePath: getSupportTokenVaultPath('private')['FLOW'],\n      },\n      FUSD: {\n        type: 'A.3c5959b568896393.FUSD.Vault',\n        publicBalPath: getSupportTokenVaultPath()['FUSD'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['FUSD'],\n        storagePath: getSupportTokenVaultPath('private')['FUSD'],\n      },\n      BLT: {\n        type: 'A.0f9df91c9121c460.BloctoToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['BLT'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['BLT'],\n        storagePath: getSupportTokenVaultPath('private')['BLT'],\n      },\n      USDC: {\n        type: 'A.b19436aae4d94622.FiatToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['USDC'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['USDC'],\n        storagePath: getSupportTokenVaultPath('private')['USDC'],\n      },\n      MY: {\n        type: 'A.348fe2042c8a70d8.MyToken.Vault',\n        publicBalPath: getSupportTokenVaultPath()['MY'],\n        publicReceiverPath: getSupportTokenVaultPath('receiver')['MY'],\n        storagePath: getSupportTokenVaultPath('private')['MY'],\n      },\n    }\n  }\n  return tokenConfigs\n}\n\nexport const getSupportTokenVaultPath = (type = 'balance'): any => {\n  let paths = {}\n  switch (type) {\n    case 'balance':\n      paths = {\n        FLOW: '/public/flowTokenBalance',\n        FUSD: '/public/fusdBalance',\n        BLT: '/public/bloctoTokenBalance',\n        USDC: 'FiatToken.VaultBalancePubPath',\n        MY: '/public/mytokenBalance',\n      }\n      break\n    case 'receiver':\n      paths = {\n        FLOW: '/public/flowTokenReceiver',\n        FUSD: '/public/fusdReceiver',\n        BLT: '/public/bloctoTokenReceiver',\n        USDC: 'FiatToken.VaultReceiverPubPath',\n        MY: '/public/mytokenReceiver',\n      }\n      break\n    case 'private':\n      paths = {\n        FLOW: '/storage/flowTokenVault',\n        FUSD: '/storage/fusdVault',\n        BLT: '/storage/bloctoTokenVault',\n        USDC: 'FiatToken.VaultStoragePath',\n        MY: '/storage/mytokenVault',\n      }\n  }\n\n  return paths\n}\n", "import * as fcl from '@onflow/fcl'\nimport { execScript } from './utils'\nimport {} from './constants'\n\nconst check_domain_collection = fcl.cdc`\nimport Domains from 0xDomains\n\npub fun main(address: Address) : Bool {\n    return getAccount(address).getCapability<&{Domains.CollectionPublic}>(Domains.CollectionPublicPath).check()\n}`\n\nconst query_ft_balance = (opt: any) => {\n  const { tokenConfig } = opt\n  const { type, publicBalPath } = tokenConfig\n  const typeArr = type.split('.')\n  const contractAddr = typeArr[1]\n  const contractName = typeArr[2]\n\n  return fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import ${contractName} from 0x${contractAddr}\n  \n  pub fun main(address: Address): UFix64? {\n    let account = getAccount(address)\n    var balance :UFix64? = nil\n    if let vault = account.getCapability(${publicBalPath}).borrow<&{FungibleToken.Balance}>() {\n      balance = vault.balance\n    }\n    return balance\n  }`\n}\n\nconst check_emerald_id = fcl.cdc`\nimport EmeraldID from 0xEmeraldID\n\npub fun main(user: Address): UInt64? {\n  let info = getAccount(user).getCapability(EmeraldID.InfoPublicPath)\n              .borrow<&EmeraldID.Info{EmeraldID.InfoPublic}>()\n  return info?.uuid\n}\n`\n\nconst get_discord_id_by_address = fcl.cdc`\nimport EmeraldIdentity from 0xEmeraldIdentity\n\npub fun main(user: Address): String? {\n  return EmeraldIdentity.getDiscordFromAccount(account: user)\n}\n`\n\nconst get_address_by_dicord_id = fcl.cdc`\nimport EmeraldIdentity from 0xEmeraldIdentity\n\npub fun main(id: String): Address? {\n  return EmeraldIdentity.getAccountFromDiscord(discordID: id)\n}\n`\n\nexport const scripts: any = {\n  check_domain_collection,\n  check_emerald_id,\n  get_address_by_dicord_id,\n  get_discord_id_by_address,\n}\n\nexport const query = async (key: string, args = [], opt = {}) => {\n  let script = scripts[key]\n  if (typeof script == 'function') {\n    script = script(opt)\n  }\n  const result = await execScript(script, args)\n  return result\n}\n", "import { json } from '@remix-run/node' // or \"@remix-run/cloudflare\"\nimport type { ActionFunction } from '@remix-run/node' // or \"@remix-run/cloudflare\"\nimport * as fcl from '@onflow/fcl'\nimport * as t from '@onflow/types'\nimport { fclinit } from '~/lib/flow/utils'\nimport { serverSend } from '~/lib/flow/transactions'\nimport crypto from 'crypto'\n\nexport const action: ActionFunction = async ({ request }) => {\n  fclinit()\n  // const formData = await request.formData()\n  const body = await request.json()\n  const { message = '', data = '' } = body\n\n  if (message === '') {\n    return json({ error: 'invalid params' }, 500)\n  }\n\n  // let jsonData = new Buffer(data, 'base64')\n  let jsonData =\n    '{\"timestamp\":1659150145,\"identifier\":\"renasTestTokenVault\",\"recieverPath\":\"renasTestTokenReceiver\",\"amount\":0.001,\"reciever\":\"0x337bf11954a327d1\"}'\n  console.log(jsonData.toString())\n  let verifier = crypto.createVerify('RSA-SHA256')\n  verifier.update(jsonData)\n\n  let pubKey = process.env.RSA_PUBLIC_KEY || ''\n  let result = verifier.verify(pubKey, message, 'hex')\n\n  // todo\n  let trxData = JSON.parse(jsonData)\n  const { amount, recieverPath, identifier } = trxData\n  let res = await serverSend(\n    'transfer_ft_with_path',\n    [fcl.arg('0xbef84882fdd4e5fa', t.Address), fcl.arg(amount.toFixed(8), t.UFix64)],\n    { vaultId: identifier, receiverId: recieverPath },\n    true,\n  )\n\n  console.log(res)\n  // console.log(result, '====')\n  return json({ res }, 200)\n}\n", "import * as fcl from '@onflow/fcl'\nimport { sendTrx } from './utils'\nimport { getSupportTokenConfig, network } from './constants'\nimport { authz } from '~/lib/flow/utils/authz'\n\nconst withdraw_domain_vault = (opt: any) => {\n  const { token } = opt\n\n  const tokenConfig = getSupportTokenConfig()[token]\n  const { type, storagePath } = tokenConfig\n  const typeArr = type.split('.')\n  const contractAddr = typeArr[1]\n  const contractName = typeArr[2]\n\n  return fcl.cdc`\n  import Flowns from 0xFlowns\n  import Domains from 0xDomains\n  import FungibleToken from 0xFungibleToken\n  import ${contractName} from 0x${contractAddr}\n\n  transaction(nameHash: String, key: String, amount: UFix64) {\n    var domain: &{Domains.DomainPrivate}\n    var vaultRef: &${contractName}.Vault\n    prepare(account: AuthAccount) {\n      var domain: &{Domains.DomainPrivate}? = nil\n      let collectionPrivate = account.borrow<&{Domains.CollectionPrivate}>(from: Domains.CollectionStoragePath) ?? panic(\"Could not find your domain collection cap\")\n      \n      let id = Domains.getDomainId(nameHash)\n      if id != nil && !Domains.isDeprecated(nameHash: nameHash, domainId: id!) {\n        domain = collectionPrivate.borrowDomainPrivate(id!)\n      }\n\n      self.domain = domain!\n      self.vaultRef = account.borrow<&${contractName}.Vault>(from: ${storagePath})\n      ?? panic(\"Could not borrow reference to the owner's Vault!\")\n    }\n    execute {\n      self.vaultRef.deposit(from: <- self.domain.withdrawVault(key: key, amount: amount))\n    }\n  }\n`\n}\n\nconst init_ft_token = (opt: any) => {\n  const { token } = opt\n\n  const tokenConfig = getSupportTokenConfig()[token]\n  const { type, storagePath, publicReceiverPath, publicBalPath } = tokenConfig\n  const typeArr = type.split('.')\n  const contractAddr = typeArr[1]\n  const contractName = typeArr[2]\n  return fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import ${contractName} from 0x${contractAddr}\n\n  transaction {\n\n    prepare(signer: AuthAccount) {\n\n        // It's OK if the account already has a Vault, but we don't want to replace it\n        if(signer.borrow<&${contractName}.Vault>(from: ${storagePath}) != nil) {\n            return\n        }\n        // Create a new Token Vault and put it in storage\n        signer.save(<- ${contractName}.createEmptyVault(), to: ${storagePath})\n\n        // Create a public capability to the Vault that only exposes\n        // the deposit function through the Receiver interface\n        signer.link<&${contractName}.Vault{FungibleToken.Receiver}>(\n            ${publicReceiverPath},\n            target: ${storagePath}\n        )\n\n        // Create a public capability to the Vault that only exposes\n        // the balance field through the Balance interface\n        signer.link<&${contractName}.Vault{FungibleToken.Balance}>(\n            ${publicBalPath},\n            target: ${storagePath}\n        )\n    }\n  }\n`\n}\n\nconst transfer_ft = (opt: any) => {\n  const { token } = opt\n\n  const tokenConfig = getSupportTokenConfig()[token]\n  const { type, storagePath, publicReceiverPath } = tokenConfig\n  const typeArr = type.split('.')\n  const contractAddr = typeArr[1]\n  const contractName = typeArr[2]\n  return fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import Domains from 0xDomains\n  import ${contractName} from 0x${contractAddr}\n\n  transaction(to: Address, amount: UFix64) {\n    let sentVault: @FungibleToken.Vault\n    prepare(signer: AuthAccount) {\n      let vaultRef = signer.borrow<&${contractName}.Vault>(from: ${storagePath})\n      ?? panic(\"Err owner Vault!\")\n      self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n      let recipient = getAccount(to)\n      let receiverRef = recipient.getCapability(${publicReceiverPath})!.borrow<&{FungibleToken.Receiver}>()\n      ?? panic(\"Err recipient Vault\")\n      receiverRef.deposit(from: <-self.sentVault)\n    }\n  }\n`\n}\n\nconst template_trx = fcl.cdc`\nimport Flowns from 0xFlowns\nimport Domains from 0xDomains\nimport FungibleToken from 0xFungibleToken\nimport NonFungibleToken from 0xNonFungibleToken\n\ntransaction(nameHashs: [String], duration: UFix64, refer: Address) {\n  let vaultRef: &FungibleToken.Vault\n  let prices: {String:{Int: UFix64}}\n  let collectionCap: &{Domains.CollectionPublic}\n  prepare(account: AuthAccount) {\n    self.collectionCap = account.getCapability<&{Domains.CollectionPublic}>(Domains.CollectionPublicPath).borrow()!\n\n    self.vaultRef = account.borrow<&FungibleToken.Vault>(from: /storage/flowTokenVault)\n          ?? panic(\"Could not borrow owner's Vault reference\")\n    \n    // self.vault <- vaultRef.withdraw(amount: amount)\n\n    self.prices = {}\n    let roots: {UInt64: Flowns.RootDomainInfo}? = Flowns.getAllRootDomains()\n    let keys = roots!.keys\n    for key in keys {\n      let root = roots![key]!\n      self.prices[root.name] = root.prices\n    }\n  }\n\n  execute {\n    var idx = 1\n    for nameHash in nameHashs {\n      idx = idx + 1\n      let id = Domains.getDomainId(nameHash)\n      let address = Domains.getRecords(nameHash)!\n      let collectionCap = getAccount(address).getCapability<&{Domains.CollectionPublic}>(Domains.CollectionPublicPath).borrow()!\n      let domain = collectionCap.borrowDomain(id: id!)\n      var len = domain.name.length\n      if len > 10 {\n        len = 10\n      }\n      let price = self.prices[domain.parent]![len]!\n      if idx != nameHashs.length {\n        Flowns.renewDomainWithNameHash(nameHash: nameHash, duration: duration, feeTokens: <- self.vaultRef.withdraw(amount: price * duration), refer: refer)\n      } else {\n        Flowns.renewDomainWithNameHash(nameHash: nameHash, duration: duration, feeTokens: <- self.vaultRef.withdraw(amount: price * duration), refer: refer)\n      }\n    }\n  }\n}\n `\n\nconst transfer_ft_with_path = (opt: any = {}) => {\n  const { vaultId, receiverId } = opt\n  return fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n\n  transaction(to: Address, amount: UFix64) {\n    let sentVault: @FungibleToken.Vault\n    prepare(signer: AuthAccount) {\n      let vaultPath = StoragePath(identifier: \"${vaultId}\")!\n      let vault = signer.borrow<&{FungibleToken.Provider}>(from: vaultPath)!\n      self.sentVault <- vault.withdraw(amount: amount)\n    }\n\n    execute {\n      let recipient = getAccount(to)\n      let receiverRef = recipient.getCapability(PublicPath(identifier: \"${receiverId}\")!)!.borrow<&{FungibleToken.Receiver}>()\n      ?? panic(\"Err recipient Vault\")\n      receiverRef.deposit(from: <-self.sentVault)\n    }\n  }\n`\n}\n\nexport const transactions: any = {\n  template_trx,\n  transfer_ft,\n  init_ft_token,\n  transfer_ft_with_path,\n}\n\nexport const send = async (key: string, args: any = [], opt = {}, onlyTrxId = false) => {\n  try {\n    let trxScript = transactions[key]\n    if (typeof trxScript == 'function') {\n      trxScript = trxScript(opt)\n    }\n    const trxId = await sendTrx(trxScript, args)\n    if (onlyTrxId) {\n      return trxId\n    }\n    const txStatus = await fcl.tx(trxId).onceSealed()\n    return txStatus\n  } catch (error) {\n    console.log(error)\n    return null\n  }\n}\n\nexport const serverSend = async (key: string, args: any = [], opt = {}, onlyTrxId = false) => {\n  try {\n    let trxScript = transactions[key]\n    if (typeof trxScript == 'function') {\n      trxScript = trxScript(opt)\n    }\n    const trxId = await sendTrx(trxScript, args, { limit: 9999, authz: authz })\n    if (onlyTrxId) {\n      return trxId\n    }\n    const txStatus = await fcl.tx(trxId).onceSealed()\n    return txStatus\n  } catch (error) {\n    console.log(error)\n    return null\n  }\n}\n", "import { sign } from './crypto.js'\nimport fcl from '@onflow/fcl'\n\n// alias Hex = String\n// type signable = { message: Hex, voucher: voucher }\n// type compositeSignature = { addr: String, keyId: Number, signature: Hex }\n// signingFunction :: signable -> compositeSignature\n// type account = { tempId: String, addr: String, keyId: Number, signingFunction: signingFunction }\n// authz :: account -> account\n\n// local\nexport const test1Addr = '0x01cf0e2f2f715450'\nexport const test2Addr = '0x179b6b1cb6755e31'\n\n// testnet\n// export const test1Addr = '0xd50084a1a43b1507'\n// export const test2Addr = '0x31673d7cb5c115d8'\n\nexport async function authz(account: any) {\n  return {\n    // there is stuff in the account that is passed in\n    // you need to make sure its part of what is returned\n    ...account,\n    // the tempId here is a very special and specific case.\n    // what you are usually looking for in a tempId value is a unique string for the address and keyId as a pair\n    // if you have no idea what this is doing, or what it does, or are getting an error in your own\n    // implementation of an authorization function it is recommended that you use a string with the address and keyId in it.\n    // something like... tempId: `${address}-${keyId}`\n    tempId: 'SERVICE_ACCOUNT',\n    addr: fcl.sansPrefix(process.env.ACCOUNT_ADDRESS), // eventually it wont matter if this address has a prefix or not, sadly :'( currently it does matter.\n    keyId: Number(process.env.ACCOUNT_KEY_ID), // must be a number\n    signingFunction: (signable: any) => ({\n      addr: fcl.withPrefix(process.env.ACCOUNT_ADDRESS), // must match the address that requested the signature, but with a prefix\n      keyId: Number(process.env.ACCOUNT_KEY_ID || 0), // must match the keyId in the account that requested the signature\n      signature: sign(process.env.PRIVATE_KEY!, signable.message), // signable.message |> hexToBinArray |> hash |> sign |> binArrayToHex\n      // if you arent in control of the transaction that is being signed we recommend constructing the\n      // message from signable.voucher using the @onflow/encode module\n    }),\n  }\n}\n\nexport function authFunc(opt: any = {}) {\n  const { addr, keyId = 0, tempId = 'SERVICE_ACCOUNT', key } = opt\n\n  return (account: any) => {\n    return {\n      ...account,\n      tempId,\n      addr: fcl.sansPrefix(addr),\n      keyId: Number(keyId),\n      signingFunction: (signable: any) => ({\n        addr: fcl.withPrefix(addr), // must match the address that requested the signature, but with a prefix\n        keyId: Number(keyId), // must match the keyId in the account that requested the signature\n        signature: sign(key, signable.message), // signable.message |> hexToBinArray |> hash |> sign |> binArrayToHex\n        // if you arent in control of the transaction that is being signed we recommend constructing the\n        // message from signable.voucher using the @onflow/encode module\n      }),\n    }\n  }\n}\n", "// var EC = require(\"elliptic\").ec\n// var SHA3 = require(\"sha3\").SHA3\nimport elliptic from 'elliptic'\nimport {SHA3} from 'sha3'\nimport { publicKey } from '../constants.js'\nconst e = new elliptic.ec('p256')\n\nimport { encodeKey, ECDSA_P256, SHA3_256 } from '@onflow/util-encode-key'\n\nexport const FLOW_ENCODED_SERVICE_KEY = encodeKey(publicKey, ECDSA_P256, SHA3_256, 1000)\n\nexport const hashMsgHex = (msgHex: string) => {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(msgHex, 'hex'))\n  return sha.digest()\n}\n\nexport function sign(privateKey: string, msgHex: string) {\n  const key = e.keyFromPrivate(Buffer.from(privateKey, 'hex'))\n  const sig = key.sign(hashMsgHex(msgHex))\n  const n = 32 // half of signature length?\n  const r = sig.r.toArrayLike(Buffer, 'be', n)\n  const s = sig.s.toArrayLike(Buffer, 'be', n)\n  return Buffer.concat([r, s]).toString('hex')\n}\n", "import { Box, Heading, Text } from '@chakra-ui/react';\nimport type { MetaFunction } from 'remix';\n\n// https://remix.run/api/conventions#meta\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Error route',\n    description: 'Generate Text missing error',\n  };\n};\n\nexport function CatchBoundary() {\n  return (\n    <Box>\n      <Heading as=\"h2\">I caught some condition</Heading>\n    </Box>\n  );\n}\n\nexport function ErrorBoundary({ error }) {\n  return (\n    <Box bg=\"red.400\" px={4} py={2}>\n      <Heading as=\"h3\" size=\"lg\" color=\"white\">\n        Something is really wrong!\n      </Heading>\n      <Box color=\"white\" fontSize={22}>\n        {error.message}\n      </Box>\n    </Box>\n  );\n}\n\n// Don't import Text from @chakra-ui/react\n// If you do the error won't be thrown\nexport default function RouteWithError() {\n  return (\n    <Box>\n      <Text>If you see this then you imported Text</Text>\n    </Box>\n  );\n}\n", "import { json } from '@remix-run/node' // or \"@remix-run/cloudflare\"\nimport type { LoaderFunction } from '@remix-run/node' // or \"@remix-run/cloudflare\"\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  // handle \"GET\" request\n  const id = params.id\n  return json({ success: true, id }, 200)\n}\n", "import { Box, Heading } from '@chakra-ui/react';\nimport type { MetaFunction } from 'remix';\n\n// https://remix.run/api/conventions#meta\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Good Route',\n    description: 'Good route',\n  };\n};\n\nexport function CatchBoundary() {\n  return (\n    <Box bg=\"yellow.500\">\n      <Heading as=\"h2\">I caught some condition</Heading>\n    </Box>\n  );\n}\n\nexport function ErrorBoundary() {\n  return (\n    <Box bg=\"red.400\" color=\"white\">\n      <Heading as=\"h2\">Something is really wrong!</Heading>\n    </Box>\n  );\n}\n\nexport default function GoodRoute() {\n  return <Box bg=\"green.400\">I'm a real route!</Box>;\n}\n", "import { Box, Heading, HStack, Link as ChakraLink } from '@chakra-ui/react';\nimport { Link } from '@remix-run/react';\n\nexport default function Index() {\n  return (\n    <Box fontFamily=\"system-ui, sans-serif\" lineHeight={1.4}>\n      <Heading as=\"h1\" color=\"blue.400\">\n        Welcome to Remix with Chakra UI!\n      </Heading>\n      <HStack spacing={4}>\n        <ChakraLink\n          href=\"https://remix.run/docs\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Remix Docs\n        </ChakraLink>\n        <ChakraLink\n          target=\"_blank\"\n          href=\"https://chakra-ui.com/docs/getting-started\"\n          rel=\"noreferrer\"\n        >\n          Chakra UI Docs\n        </ChakraLink>\n        <ChakraLink as={Link} color=\"red.400\" to=\"/test\">\n          Nothing here\n        </ChakraLink>\n      </HStack>\n    </Box>\n  );\n}\n", "import { Box, Heading, HStack, Link as ChakraLink } from '@chakra-ui/react';\nimport { useTranslation } from \"react-i18next\";\n\n\nexport default function Index() {\n  let { t } = useTranslation();\n  return (\n    <Box fontFamily=\"system-ui, sans-serif\" lineHeight={1.4}>\n      <Heading as=\"h1\" color=\"blue.400\">\n        Test page {t(\"greeting\")}\n      </Heading>\n      <HStack spacing={4}>\n\n      </HStack>\n    </Box>\n  );\n}\n", "export default {'version':'2adc8beb','entry':{'module':'/build/entry.client-64PVJGOT.js','imports':['/build/_shared/chunk-CMF3WPQ2.js','/build/_shared/chunk-IW6E4DGT.js','/build/_shared/chunk-TW5RWMWU.js','/build/_shared/chunk-BIV3HKS3.js','/build/_shared/chunk-ITPIIBDM.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-V7Y3BTUW.js','imports':['/build/_shared/chunk-V5A7PZU2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/api/$id/test':{'id':'routes/api/$id/test','parentId':'root','path':'api/:id/test','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/$id/test-ZLUXFWDS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/auth/withdraw':{'id':'routes/api/auth/withdraw','parentId':'root','path':'api/auth/withdraw','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/auth/withdraw-OR56JLGS.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/data/accounts/emerald/index':{'id':'routes/api/data/accounts/emerald/index','parentId':'root','path':'api/data/accounts/emerald','index':true,'caseSensitive':undefined,'module':'/build/routes/api/data/accounts/emerald/index-JXD66UGK.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/good-route':{'id':'routes/good-route','parentId':'root','path':'good-route','index':undefined,'caseSensitive':undefined,'module':'/build/routes/good-route-6SOU43CD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-JXGQQ5PM.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/route-with-error':{'id':'routes/route-with-error','parentId':'root','path':'route-with-error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/route-with-error-OYTDSXEQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/test':{'id':'routes/test','parentId':'root','path':'test','index':undefined,'caseSensitive':undefined,'module':'/build/routes/test-N2CHHARU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-2ADC8BEB.js'};"],
  "mappings": "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",
  "names": []
}
